variable "location" {
  description = "The Azure region where resources will be created"
  # Make a choice from the list of Azure regions
  type        = string
  default     = "westus"

  validation {
    condition     = contains(["centralus", "eastus", "eastus2", "northcentralus", "southcentralus", "westcentralus", "westus", "westus2", "westus3"], var.location)
    error_message = "Skypilot currently only supports the US Azure regions" 
  }  
}

variable "zenml_server_url" {
  description = "The URL where your ZenML server is hosted. This should be the base URL of the ZenML server, e.g. 'http://zenml.example.com:8080'"
  type        = string

  validation {
    condition     = can(regex("http[s]?://", var.zenml_server_url))
    error_message = "The ZenML server URL must start with 'http://' or 'https://'"
  }
}

variable "zenml_api_key" {
  description = "ZenML service account API key to authenticate with the ZenML server. A ZenML API key can be generated by following the instructions at https://docs.zenml.io/how-to/connecting-to-zenml/connect-with-a-service-account"
  type        = string
  sensitive   = true
}

variable "zenml_api_token" {
  description = "ZenML service account API token to authenticate with the ZenML server. This is only used with by ZenML CLI or dashboard and should not be used to run the Terraform module manually."
  type        = string
  sensitive   = true
  default     = ""
}

variable "zenml_stack_name" {
  description = "A custom name for the ZenML stack that will be registered with the ZenML server"
  type        = string
  default     = ""
}

variable "storage_account_tier" {
  description = "The tier for the Azure storage account"
  type        = string
  default     = "Standard"
}

variable "storage_account_replication_type" {
  description = "The replication type for the Azure storage account"
  type        = string
  default     = "LRS"
}

variable "container_registry_sku" {
  description = "The SKU for the Azure container registry"
  type        = string
  default     = "Basic"
}
